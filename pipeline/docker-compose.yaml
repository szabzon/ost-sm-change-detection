version: '3.6'

networks:
  ost-sm:
    driver: bridge

# Services
# Zookeeper, Kafka, Kafka Manager
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_CREATE_TOPICS: "hai-input:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    #command: "bash -c 'start-kafka.sh && ls && sleep 10 && kafka-topics.sh --bootstrap-server localhost:9092 --create --topic hai-input --partitions 1 --replication-factor 1'"

  flink-jobmanager:
    image: flink:latest
    expose:
      - "6123"
    ports:
      - "8081:8081"
    command: jobmanager

  # flink-taskmanager:
  #   image: flink:latest
  #   expose:
  #     - "6121"
  #   command: taskmanager
  #   links:
  #     - flink-jobmanager:jobmanager
  #   networks:
  #     - ost-sm

  # telegraf, influxdb, grafana
  telegraf:
    container_name: telegraf
    image: telegraf:latest
    restart: always
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - "8125:8125"
    networks:
      - ost-sm

  influxdb:
    image: influxdb:latest
    ports:
      - "8086:8086"
    environment:
      INFLUXDB_DB: influxdb
      INFLUXDB_ADMIN_USER: ${ADMIN_USERNAME}
      INFLUXDB_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      INFLUXDB_USER: telegraf_user
      INFLUXDB_USER_PASSWORD: telegraf_pass
      INFLUXDB_USER_READ_DATABASE: telegraf
      INFLUXDB_USER_WRITE_DATABASE: telegraf
      INFLUXDB_ADMIN_USER_TOKEN: ${AUTH_TOKEN}
      INFLUXDB_ORG: 'mema_org'
      INFLUXDB_BUCKET: 'mema_bucket'
    volumes:
      - ./influxdb:/var/lib/influxdb


  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ALLOW_EMBEDDING: "true"
    links:
      - influxdb
      - telegraf
    networks:
      - ost-sm

  spark:
    image: "jupyter/pyspark-notebook"
    ports:
      - '8888:8888'
      - '4040:4040'
      - '4041:4041'
    links:
      - "kafka:kafka-server" # allows spark notebook to discover kafka service by name "kafka-server"
    volumes:
      - type: bind
        source: ./
        target: /home/jovyan/work
    networks:
      - ost-sm

    depends_on:
      - zookeeper
